user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        listen       [::]:80;
        server_name ${DOMAIN} www.${DOMAIN};

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://app-frontend:3000;
        }

        location /api/ {
            rewrite ^/api/(.*)$ /$1 break;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://app-backend:8000;
        }

        location /cms/ {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://app-admin:3000;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name ${DOMAIN} www.${DOMAIN};

        ssl_certificate /ssl/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /ssl/${DOMAIN}/privkey.pem;

        ssl_certificate /ssl/www.${DOMAIN}/fullchain.pem;
        ssl_certificate_key /ssl/www.${DOMAIN}/privkey.pem;

        location / {
            return 200 'It works!';
            add_header Content-Type text/plain;
        }
    }
}